openapi: 3.0.0
info:
  title: Node User API
  description: API for users management and authentication
  version: 1.0.0
servers:
- url: http://localhost:3000
  description: Development server
security:
- JWTAuth: []
paths:
  /api/v1/:
    get:
      summary: Get API welcome message
      operationId: apiV1GET
      responses:
        "200":
          description: API welcome message
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/String'
              example: Welcome to the Users Authentication API
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTP_ResponseCode'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTP_ResponseCode'
      x-swagger-router-controller: Default
  /api/v1/users/:
    get:
      summary: Get a list of all users
      operationId: apiV1UsersGET
      parameters:
      - name: page
        in: query
        description: "Page number for pagination (default: 1)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: "Number of users shown per page (default: 10)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
              example:
                page: 1
                per_page: 10
                search_name: John
                users:
                  schema:
                  - $ref: '#/components/schemas/User-Object'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
              example: Error getting the users list
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTP_ResponseCode'
      x-swagger-router-controller: Default
    put:
      summary: Update user
      operationId: apiV1UsersPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-Object'
        required: true
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
              example: Missing user ID
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
              example: User not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
              example: Error updating the user
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTP_ResponseCode'
      x-swagger-router-controller: Default
    post:
      summary: Register a new user
      operationId: apiV1UsersPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-Object'
        required: true
      responses:
        "201":
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
              example: Missing required fields
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTP_ResponseCode'
      x-swagger-router-controller: Default
    delete:
      summary: Delete user
      operationId: apiV1UsersDELETE
      responses:
        "200":
          description: User deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
              example: User not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
              example: Error deleting the user
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTP_ResponseCode'
      x-swagger-router-controller: Default
    patch:
      summary: Update user's password
      operationId: apiV1UsersPATCH
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_users_body'
        required: true
      responses:
        "200":
          description: Password updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
              example: "Missing required field: Email"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
              example: Error updating the password
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTP_ResponseCode'
      x-swagger-router-controller: Default
  /api/v1/users/{user_id}:
    get:
      summary: Get user by ID
      operationId: apiV1UsersUser_idGET
      parameters:
      - name: user_id
        in: path
        description: ID of the user to retrieve
        required: true
        style: simple
        explode: false
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-Object'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTP_ResponseCode'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTP_ResponseCode'
      x-swagger-router-controller: Default
  /api/v1/users/login:
    post:
      summary: User login
      operationId: apiV1UsersLoginPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_login_body'
        required: true
      responses:
        "200":
          description: User successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
              example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
              example: "Missing required field: Email"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
        "500":
          description: Error logging in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTP_ResponseCode'
      x-swagger-router-controller: Default
  /api/v1/users/forgot-password:
    post:
      summary: Generates an authentication token for user to request a password update
      operationId: apiV1UsersForgot_passwordPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_forgotpassword_body'
        required: true
      responses:
        "200":
          description: Authentication token generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
              example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
              example: "Missing required field: Email"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
        "500":
          description: Error generating access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSON'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTP_ResponseCode'
      x-swagger-router-controller: Default
components:
  schemas:
    User-Object:
      type: object
      properties:
        name:
          maxLength: 50
          pattern: "^[A-Z][a-z]{2,} [A-Z][a-z]{2,}$"
          type: string
        dni:
          maxLength: 10
          pattern: "^[0-9]{5,10}$"
          type: string
        email:
          maxLength: 50
          pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
          type: string
        password:
          maxLength: 80
          pattern: "^[A-Za-z0-9]{3,80}$"
          type: string
      additionalProperties: false
      example:
        password: password
        name: name
        dni: dni
        email: email
    String:
      maxLength: 1000
      pattern: "^[A-Za-z0-9ÁÉÍÓÚáéíóúÜüÑñ\\s]{3,10}$"
      type: object
      additionalProperties: false
    JSON:
      type: object
    HTTP_ResponseCode:
      type: string
    Token:
      type: object
      properties:
        token:
          maxLength: 10000
          pattern: "^[A-Za-z0-9]{3,}$"
          type: string
      additionalProperties: false
      example:
        token: token
    v1_users_body:
      type: object
      properties:
        email:
          maxLength: 50
          pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
          type: string
        newPassword:
          maxLength: 80
          pattern: "^[A-Za-z0-9]{3,80}$"
          type: string
      additionalProperties: false
    users_login_body:
      type: object
      properties:
        email:
          maxLength: 100
          pattern: "^[A-Za-z0-9]{3,10}$"
          type: string
        password:
          maxLength: 100
          pattern: "^[A-Za-z0-9]{3,10}$"
          type: string
      additionalProperties: false
    users_forgotpassword_body:
      type: object
      properties:
        email:
          maxLength: 50
          pattern: "^[A-Za-z0-9]{3,10}$"
          type: string
      additionalProperties: false
  securitySchemes:
    JWTAuth:
      type: apiKey
      description: JWT for authentication and authorization
      name: Authorization
      in: header
